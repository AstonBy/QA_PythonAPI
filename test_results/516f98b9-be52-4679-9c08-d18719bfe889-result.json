{"name": "test_user_auth", "status": "broken", "statusDetails": {"message": "TypeError: string indices must be integers", "trace": "self = <connect.test_user_auth.TestUserAuth object at 0x00000258DFFE70A0>\n\n    @allure.description(\"Sign-up a new user\")\n    def test_user_auth(self):\n        response_group_access_field = ConnectRequests._send(\"GET\", \"v1/users/group-access-field/\")\n    \n        Assertions.assert_status_code(response_group_access_field, 200)\n        Assertions.assert_json_has_key(response_group_access_field, 'is_signup_access_key')\n    \n        self.account_number = '123456789'\n        response_group_fields_request = ConnectRequests._send(\"GET\", f\"v1/users/group-fields-request/?account_number={self.account_number}\")\n    \n        Assertions.assert_status_code(response_group_fields_request, 200)\n        Assertions.assert_json_has_key(response_group_fields_request, 'group_id')\n    \n        group_id = self.get_json_value(response_group_fields_request, \"group_id\")\n    \n        print(f\"{group_id} - group_id\")\n    \n        data = {\n            \"connect_form_data\": {\n                     'person_type': 'Employee',\n                     'first_name': 'Ast',\n                     'last_name': 'Metest',\n                     'gender': 'Male',\n                     'date_of_birth': '2000-01-09'},\n            \"form_data\": {}\n        }\n    \n    \n        response_group_validate = ConnectRequests._send(\"POST\",\n            f\"v1/users/group-validate/?group_id={group_id}\",\n            json=data)\n    \n        # with allure.step(f\"{method} request to URL '{url}'\"):\n        #     response_group_validate = requests.request(\"POST\", url_full, json=json)\n    \n        Assertions.assert_status_code(response_group_validate, 200)\n    \n    \n        ceu = self.get_cookie(response_group_validate, \"ceu\")\n    \n    \n        email_main_part = \"shkorkin+qa06\"\n        random_email_part = datetime.now().strftime(\"%m%d%Y%H%M%S\")\n        email_for_registration = f\"{email_main_part}{random_email_part}@alarstudios.com\"\n        response_register = ConnectRequests._send(\"POST\", \"v1/users/register/\",\n                                  json={\n                                      \"email\": email_for_registration,\n                                      \"password\": \"1234qwertY!\",\n                                      \"username\": \"Ast\"\n                                  },\n                                  cookies={\n                                      \"ceu\": ceu\n                                  }\n                                  )\n        Assertions.assert_status_code(response_register, 200)\n        Assertions.assert_json_has_key(response_register, \"access_token\")\n        access_token = self.get_json_value(response_register, \"access_token\")\n        print(access_token)\n        ses_cookie = self.get_cookie(response_register, \"ses\")\n        print(ses_cookie)\n>       response_users_me = ConnectRequests._send(\"GET\", \"v1/users/me/\", cookies=ses_cookie)\n\nconnect\\test_user_auth.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nlibconnect\\connect_requests.py:28: in _send\n    response = requests.request(method, url_full, params=params, data=data, json=json, cookies=cookies, headers=headers)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\requests\\api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\requests\\sessions.py:573: in request\n    prep = self.prepare_request(req)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\requests\\sessions.py:471: in prepare_request\n    cookies = cookiejar_from_dict(cookies)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncookie_dict = '809e29d37c4a4862a4b4f8123a685b3d', cookiejar = <RequestsCookieJar[]>, overwrite = True\n\n    def cookiejar_from_dict(cookie_dict, cookiejar=None, overwrite=True):\n        \"\"\"Returns a CookieJar from a key/value dictionary.\n    \n        :param cookie_dict: Dict of key/values to insert into CookieJar.\n        :param cookiejar: (optional) A cookiejar to add the cookies to.\n        :param overwrite: (optional) If False, will not replace cookies\n            already in the jar with new ones.\n        :rtype: CookieJar\n        \"\"\"\n        if cookiejar is None:\n            cookiejar = RequestsCookieJar()\n    \n        if cookie_dict is not None:\n            names_from_jar = [cookie.name for cookie in cookiejar]\n            for name in cookie_dict:\n                if overwrite or (name not in names_from_jar):\n>                   cookiejar.set_cookie(create_cookie(name, cookie_dict[name]))\nE                   TypeError: string indices must be integers\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\requests\\cookies.py:537: TypeError"}, "description": "Sign-up a new user", "steps": [{"name": "GET request to URL 'https://qa06-connect.stage-twill.health/api/v1/users/group-access-field/'", "status": "passed", "start": 1673532362378, "stop": 1673532362949}, {"name": "GET request to URL 'https://qa06-connect.stage-twill.health/api/v1/users/group-fields-request/?account_number=123456789'", "status": "passed", "start": 1673532362949, "stop": 1673532363397}, {"name": "POST request to URL 'https://qa06-connect.stage-twill.health/api/v1/users/group-validate/?group_id=4'", "status": "passed", "start": 1673532363397, "stop": 1673532363720}, {"name": "POST request to URL 'https://qa06-connect.stage-twill.health/api/v1/users/register/'", "status": "passed", "start": 1673532363720, "stop": 1673532364954}, {"name": "GET request to URL 'https://qa06-connect.stage-twill.health/api/v1/users/me/'", "status": "broken", "statusDetails": {"message": "TypeError: string indices must be integers\n", "trace": "  File \"C:\\Users\\Shkorkin\\AST\\QA_PythonAPI\\libconnect\\connect_requests.py\", line 28, in _send\n    response = requests.request(method, url_full, params=params, data=data, json=json, cookies=cookies, headers=headers)\n  File \"C:\\Users\\Shkorkin\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\requests\\api.py\", line 59, in request\n    return session.request(method=method, url=url, **kwargs)\n  File \"C:\\Users\\Shkorkin\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\requests\\sessions.py\", line 573, in request\n    prep = self.prepare_request(req)\n  File \"C:\\Users\\Shkorkin\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\requests\\sessions.py\", line 471, in prepare_request\n    cookies = cookiejar_from_dict(cookies)\n  File \"C:\\Users\\Shkorkin\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\requests\\cookies.py\", line 537, in cookiejar_from_dict\n    cookiejar.set_cookie(create_cookie(name, cookie_dict[name]))\n"}, "start": 1673532364954, "stop": 1673532364954}], "attachments": [{"name": "stdout", "source": "7d515b3b-e8da-423b-8aa0-1006f18cbcfc-attachment.txt", "type": "text/plain"}], "start": 1673532362378, "stop": 1673532364954, "uuid": "c4be91a1-f2ff-4289-864a-59cc2e592389", "historyId": "4508fdcbd613d6c47d5b55f502afd05e", "testCaseId": "12f44b9ab4fb241e61f643a23e25f47d", "fullName": "connect.test_user_auth.TestUserAuth#test_user_auth", "labels": [{"name": "epic", "value": "Authorization cases"}, {"name": "parentSuite", "value": "connect"}, {"name": "suite", "value": "test_user_auth"}, {"name": "subSuite", "value": "TestUserAuth"}, {"name": "host", "value": "DESKTOP-L0KFRAS"}, {"name": "thread", "value": "5808-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "connect.test_user_auth"}]}