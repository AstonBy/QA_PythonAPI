{"name": "test_user_auth", "status": "failed", "statusDetails": {"message": "AssertionError: Expected status code is 200. Actual is 401", "trace": "self = <connect.test_user_auth.TestUserAuth object at 0x000001FBF7FE70D0>\n\n    @allure.description(\"Sign-up a new user\")\n    def test_user_auth(self):\n        response_group_access_field = ConnectRequests._send(\"GET\", \"v1/users/group-access-field/\")\n    \n        Assertions.assert_status_code(response_group_access_field, 200)\n        Assertions.assert_json_has_key(response_group_access_field, 'is_signup_access_key')\n    \n        self.account_number = '123456789'\n        response_group_fields_request = ConnectRequests._send(\"GET\", f\"v1/users/group-fields-request/?account_number={self.account_number}\")\n    \n        Assertions.assert_status_code(response_group_fields_request, 200)\n        Assertions.assert_json_has_key(response_group_fields_request, 'group_id')\n    \n        group_id = self.get_json_value(response_group_fields_request, \"group_id\")\n    \n        print(f\"{group_id} - group_id\")\n    \n        data = {\n            \"connect_form_data\": {\n                     'person_type': 'Employee',\n                     'first_name': 'Ast',\n                     'last_name': 'Metest',\n                     'gender': 'Male',\n                     'date_of_birth': '2000-01-09'},\n            \"form_data\": {}\n        }\n    \n    \n        response_group_validate = ConnectRequests._send(\"POST\",\n            f\"v1/users/group-validate/?group_id={group_id}\",\n            json=data)\n    \n        # with allure.step(f\"{method} request to URL '{url}'\"):\n        #     response_group_validate = requests.request(\"POST\", url_full, json=json)\n    \n        Assertions.assert_status_code(response_group_validate, 200)\n    \n    \n        ceu = self.get_cookie(response_group_validate, \"ceu\")\n    \n    \n        email_main_part = \"shkorkin+qa06\"\n        random_email_part = datetime.now().strftime(\"%m%d%Y%H%M%S\")\n        email_for_registration = f\"{email_main_part}{random_email_part}@alarstudios.com\"\n        response_register = ConnectRequests._send(\"POST\", \"v1/users/register/\",\n                                  json={\n                                      \"email\": email_for_registration,\n                                      \"password\": \"1234qwertY!\",\n                                      \"username\": \"Ast\"\n                                  },\n                                  cookies={\n                                      \"ceu\": ceu\n                                  }\n                                  )\n        Assertions.assert_status_code(response_register, 200)\n        Assertions.assert_json_has_key(response_register, \"access_token\")\n        access_token = self.get_json_value(response_register, \"access_token\")\n        print(access_token)\n    \n        response_users_me = ConnectRequests._send(\"GET\", \"v1/users/me/\")\n    \n>       Assertions.assert_status_code(response_users_me, 200)\n\nconnect\\test_user_auth.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [401]>, expected_status_code = 200\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code):\n>       assert response.status_code == expected_status_code, \\\n            f'Expected status code is {expected_status_code}. Actual is {response.status_code}'\nE       AssertionError: Expected status code is 200. Actual is 401\n\nlibconnect\\assertions.py:9: AssertionError"}, "description": "Sign-up a new user", "steps": [{"name": "GET request to URL 'https://qa06-connect.stage-twill.health/api/v1/users/group-access-field/'", "status": "passed", "start": 1673531648857, "stop": 1673531649443}, {"name": "GET request to URL 'https://qa06-connect.stage-twill.health/api/v1/users/group-fields-request/?account_number=123456789'", "status": "passed", "start": 1673531649443, "stop": 1673531649860}, {"name": "POST request to URL 'https://qa06-connect.stage-twill.health/api/v1/users/group-validate/?group_id=4'", "status": "passed", "start": 1673531649860, "stop": 1673531650193}, {"name": "POST request to URL 'https://qa06-connect.stage-twill.health/api/v1/users/register/'", "status": "passed", "start": 1673531650193, "stop": 1673531651280}, {"name": "GET request to URL 'https://qa06-connect.stage-twill.health/api/v1/users/me/'", "status": "passed", "start": 1673531651280, "stop": 1673531651550}], "attachments": [{"name": "stdout", "source": "97f092e1-a0ac-4f8d-8d75-b41db7fee0de-attachment.txt", "type": "text/plain"}], "start": 1673531648857, "stop": 1673531651550, "uuid": "6260ea47-a813-4877-8ab5-f9cc53385ffa", "historyId": "4508fdcbd613d6c47d5b55f502afd05e", "testCaseId": "12f44b9ab4fb241e61f643a23e25f47d", "fullName": "connect.test_user_auth.TestUserAuth#test_user_auth", "labels": [{"name": "epic", "value": "Authorization cases"}, {"name": "parentSuite", "value": "connect"}, {"name": "suite", "value": "test_user_auth"}, {"name": "subSuite", "value": "TestUserAuth"}, {"name": "host", "value": "DESKTOP-L0KFRAS"}, {"name": "thread", "value": "7196-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "connect.test_user_auth"}]}